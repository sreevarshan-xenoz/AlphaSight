name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 5:30 PM IST (12:00 PM UTC)
    - cron: '0 12 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .[dev]
    
    - name: Lint with flake8
      run: |
        flake8 nifty_ml_pipeline tests config --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 nifty_ml_pipeline tests config --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Check code formatting
      run: |
        black --check nifty_ml_pipeline tests config
        isort --check-only nifty_ml_pipeline tests config
    
    - name: Run tests with coverage
      run: |
        pytest --cov=nifty_ml_pipeline --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  pipeline-execution:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'schedule'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run ML Pipeline
      env:
        NSE_API_KEY: ${{ secrets.NSE_API_KEY }}
        ECONOMIC_TIMES_API_KEY: ${{ secrets.ECONOMIC_TIMES_API_KEY }}
        LOG_LEVEL: INFO
      run: |
        python -m nifty_ml_pipeline.main
    
    - name: Upload pipeline logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: pipeline-logs
        path: |
          pipeline.log
          logs/